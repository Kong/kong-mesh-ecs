AWSTemplateFormatVersion: "2010-09-09"
Description: Kong Mesh ECS controller
Parameters:
  VPCStackName:
    Type: String
    Description:
      The name of the parent networking stack that you created. Necessary
      to locate and reference resources created by that stack.
  CPStackName:
    Type: String
    Description:
      The name of the stack used to provision the control plane. Needed to
      get the address of the control plane.
  Image:
    Type: String
    Default: "docker.io/kong/kong-mesh-ecs-controller:dev"
    Description: The name of the kong-mesh-ecs-controller docker image
  DesiredCount:
    Type: String
    Default: 1
    Description: The desired replica count of the controller
  DataplaneTokenSecretPrefix:
    Type: String
    Default: "kong-mesh-ecs/"
    Description: Prefix used for all dataplane tokens
  APITokenSecret:
    Type: String
    Description: Secret containing Kong Mesh API token for use with ECS controller
Mappings:
  Config:
    Controller:
      Name: "kong-mesh-ecs-controller"

Resources:
  ControllerTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ecs-tasks.amazonaws.com]
            Action: ["sts:AssumeRole"]
      Policies:
        - PolicyName: get-api-token-secret
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource:
                  - !Ref APITokenSecret
                  - Fn::ImportValue: !Join [":", [!Ref CPStackName, CPCASecret]]
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess

  ControllerTaskIamRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      Policies:
        - PolicyName: manage-dataplane-token-secrets
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:PutSecretValue
                Resource:
                  - !Join [
                      ":",
                      [
                        "arn",
                        !Ref AWS::Partition,
                        "secretsmanager",
                        !Ref AWS::Region,
                        !Ref AWS::AccountId,
                        "secret",
                        !Join ["", [!Ref DataplaneTokenSecretPrefix, "*"]],
                      ],
                    ]
              - Effect: Allow
                Action:
                  - ecs:ListTasks
                  - ecs:DescribeTasks
                Resource:
                  - "*"
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "ecs-tasks.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchFullAccess
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
        - arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref AWS::StackName
      RetentionInDays: 7

  WorkloadSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: kong-mesh-ecs-controller security group
      VpcId:
        Fn::ImportValue: !Join [":", [!Ref "VPCStackName", "VPCId"]]

  ServiceWorkload:
    Type: AWS::ECS::Service
    Properties:
      LaunchType: FARGATE
      Cluster:
        Fn::ImportValue: !Join [":", [!Ref "VPCStackName", "ClusterName"]]
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref ControllerTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - Fn::ImportValue:
                !Join [":", [!Ref "VPCStackName", "PublicSubnet"]]
          SecurityGroups: [!Ref "WorkloadSecurityGroup"]

  ControllerTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !FindInMap [Config, Controller, Name]
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn: !Ref ControllerTaskIamRole
      ExecutionRoleArn: !Ref ControllerTaskExecutionRole
      Cpu: 256
      Memory: 512
      ContainerDefinitions:
        - Name: kong-mesh-ecs-controller
          Essential: true
          Image: !Ref Image
          Secrets:
            - Name: KUMA_API_TOKEN
              ValueFrom: !Ref APITokenSecret
            - Name: KUMA_API_CA_BYTES
              ValueFrom:
                Fn::ImportValue: !Join [":", [!Ref CPStackName, CPCASecret]]
          Command:
            - "run"
            - "--api-server-url"
            - Fn::Sub:
                - https://${Hostname}:5682
                - Hostname:
                    Fn::ImportValue: !Join [":", [!Ref CPStackName, CPAddress]]
            - "--secret-name-prefix"
            - !Ref DataplaneTokenSecretPrefix
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref AWS::StackName
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: kong-mesh-ecs-controller

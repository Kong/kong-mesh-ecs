AWSTemplateFormatVersion: "2010-09-09"
Description: EKS Cluster for Demo
Parameters:
  VPCStackName:
    Type: String
    Description:
      Name of the parent Fargate networking stack that you created. Necessary
      to locate and reference resources created by that stack.
  DBName:
    Type: String
    Description: Name of the DB Name
    Default: kongmesh
  MasterUsername:
    Type: String
    Description: Name of the DB Master Username
    Default: kongmesh

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to Kong Mesh CP DB
      VpcId:
        Fn::ImportValue: !Join [":", [!Ref VPCStackName, VPCId]]

  PostgresFromSelf:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress for control plane to postgres
      GroupId: !Ref SecurityGroup
      CidrIp: "10.0.0.0/8"
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432

  # Database
  SubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Ref AWS::StackName
      SubnetIds:
        - Fn::ImportValue: !Join [":", [!Ref VPCStackName, PublicSubnet]]
        - Fn::ImportValue: !Join [":", [!Ref VPCStackName, PublicSubnet2]]

  DatabasePassword:
    Type: AWS::SecretsManager::Secret
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      # Using the StackId gives us a randomness to the name while allowing us to
      # prefix it with a path
      Name:
        !Join [
          "/",
          [
            !Ref AWS::StackName,
            "CPDatabasePassword",
            !Select [2, !Split ["/", !Ref AWS::StackId]],
          ],
        ]
      Description: Secret containing the password for the Kong Mesh CP DB backend
      GenerateSecretString:
        ExcludeCharacters: >-
          '"@/\
        PasswordLength: 16

  Database:
    Type: AWS::RDS::DBInstance
    # The default is snapshot which is a good default but, we use this in CI where snapshots don't make sense
    # If reusing this you probably don't want this deletionPolicy
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      DBName: !Ref DBName
      Engine: postgres
      MasterUsername: !Ref MasterUsername
      MasterUserPassword:
        Fn::Sub: "{{resolve:secretsmanager:${DatabasePassword}:SecretString}}"
      AllocatedStorage: 50
      DBInstanceClass: db.m5.large
      DBSubnetGroupName: !Ref SubnetGroup
      VPCSecurityGroups:
        - !Ref SecurityGroup
      BackupRetentionPeriod: 1

Outputs:
  Address:
    Description: The address to the Database
    Value: !GetAtt Database.Endpoint.Address
    Export:
      Name: !Join [":", [!Ref AWS::StackName, Address]]
  DBName:
    Description: The database name
    Value: !Ref DBName
    Export:
      Name: !Join [":", [!Ref AWS::StackName, DBName]]
  MasterUsername:
    Description: The database user
    Value: !Ref MasterUsername
    Export:
      Name: !Join [":", [!Ref AWS::StackName, MasterUsername]]
  Password:
    Description: The database password
    Value: !Ref DatabasePassword
    Export:
      Name: !Join [":", [!Ref AWS::StackName, Password]]
